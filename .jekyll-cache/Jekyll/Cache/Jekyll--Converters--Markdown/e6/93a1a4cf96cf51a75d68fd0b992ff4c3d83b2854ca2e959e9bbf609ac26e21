I";<p><a href="https://github.com/axios/axios">Axios</a>는 http통신을 하고, ajax 요청을 하는 등의 작업을 위한 라이브러리입니다. 이 외에 <a href="https://github.com/pagekit/vue-resource">vue-resource</a> 라는 라이브러리도 있지만 업데이트도 느리고 Axios보다 커뮤니티도 활성화되어있지 않아서 잘 사용하지 않는다고 합니다.</p>

<p><a href="https://github.com/axios/axios">https://github.com/axios/axios</a></p>

<hr />

<h3 id="axios-설치하기">Axios 설치하기</h3>

<p>아래의 명령어를 입력해서 Axios를 설치합니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">--save</span> axios
</code></pre></div></div>

<p>그리고, Axios를 전역으로 사용할 수 있도록 main.js 안에 메소드를 추가합니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">Vue</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vue</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">App</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./App</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">axios</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">axios</span><span class="dl">'</span>

<span class="nx">Vue</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">$http</span> <span class="o">=</span> <span class="nx">axios</span>

<span class="nx">app</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Vue</span><span class="p">({</span>
    <span class="na">el</span><span class="p">:</span> <span class="dl">'</span><span class="s1">#app</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">components</span><span class="p">:</span> <span class="p">{</span> <span class="nx">App</span> <span class="p">},</span>
    <span class="na">template</span><span class="p">:</span> <span class="dl">'</span><span class="s1">&lt;App/&gt;</span><span class="dl">'</span>
<span class="p">})</span>
</code></pre></div></div>

<hr />

<h3 id="axios-사용하기">Axios 사용하기</h3>

<p><a href="https://jsonplaceholder.typicode.com/">JSONPlaceholder</a> 라는 서비스를 활용해서, 방금 설치한 Axios를 테스트 해보겠습니다. 다음과 같은 코드를 작성해주시면 됩니다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;template</span> <span class="na">lang=</span><span class="s">"pug"</span><span class="nt">&gt;</span>
  div#app
    div(v-for="user in users" v-bind:key="users.id")
      h1 
      p 
    button(@click="fetchUsers") Click me
<span class="nt">&lt;/template&gt;</span>

<span class="nt">&lt;script&gt;</span>
<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">app</span><span class="dl">'</span><span class="p">,</span>
  <span class="nx">data</span> <span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">{</span>
      <span class="na">users</span><span class="p">:</span> <span class="p">[]</span>
    <span class="p">}</span>
  <span class="p">},</span>
  <span class="na">methods</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">fetchUsers</span><span class="p">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
      <span class="kd">let</span> <span class="nx">baseURI</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">https://jsonplaceholder.typicode.com</span><span class="dl">'</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">$http</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="s2">`</span><span class="p">${</span><span class="nx">baseURI</span><span class="p">}</span><span class="s2">/users`</span><span class="p">)</span>
      <span class="p">.</span><span class="nx">then</span><span class="p">((</span><span class="nx">result</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">users</span> <span class="o">=</span> <span class="nx">result</span><span class="p">.</span><span class="nx">data</span>
      <span class="p">})</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<hr />

<h3 id="ie-지원하기">IE 지원하기</h3>

<p>IE는 promise를 지원하지 않기때문에, 그에 해당하는 polyfill이 필요합니다. 아래의 명령어를 입력해서 설치합니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">--save</span> es6-promise
</code></pre></div></div>

<p>그 후, webpack의 config 파일에 아래와 같은 코드를 작성해서 불러옵니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">es6-promise</span><span class="dl">'</span><span class="p">).</span><span class="nx">polyfill</span><span class="p">();</span>
</code></pre></div></div>
:ET