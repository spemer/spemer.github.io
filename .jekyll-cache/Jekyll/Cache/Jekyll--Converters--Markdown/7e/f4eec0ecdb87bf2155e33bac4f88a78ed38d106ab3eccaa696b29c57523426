I"ȇ<h3 id="사이트맵-생성부터-검색엔진-색인-요청까지">사이트맵 생성부터, 검색엔진 색인 요청까지</h3>

<p>안녕하세요! 라이브 마켓 모음 앱, 볼라의 디자이너 서혁입니다. 볼라는 셀러(판매자)와 구매자가 라이브 방송을 통해 소통하며 상품을 구매할 수 있는 플랫폼입니다.</p>

<p>얼마 전, 기존 <a href="https://vuejs.org/">Vue.js</a>로 만들어져있던 볼라 랜딩페이지(https://volla.live)를 앱 내 콘텐츠 공유용 브릿지 페이지(<a href="https://nextjs.org/">Next.js</a>)에 통합하게 되면서 함께 진행한 검색엔진 최적화(SEO) 작업 - 그중에서도 사이트맵 작업 중에 진행했던, Next.js 동적 sitemap generator 스크립트 작성기를 공유하고자 합니다.</p>

<hr />

<h3 id="1-nextjs의-폴더구조를-활용한-sitemap-generator-스크립트-작성">1. Next.js의 폴더구조를 활용한 sitemap generator 스크립트 작성​</h3>

<p>Next.js는 pages 디렉토리 내의 폴더와 파일명을 따라 URL이 생성되므로, globby를 사용해 pages 디렉토리의 모든 폴더와 파일명들 중 Next.js만의 특수한 파일명들 (_document.js, _app.js 등)을 제외한 나머지 폴더 및 파일명들로 사이트맵 xml이 만들어지도록 코드를 작성했습니다.</p>

<p>우선 루트 디렉토리에서 scripts 폴더를 만들고, 그 안에 sitemap-common.js라는 이름으로 아래와 같은 코드를 작성했습니다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">fs</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">globby</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">globby</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">prettier</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">prettier</span><span class="dl">"</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">getDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">().</span><span class="nx">toISOString</span><span class="p">();</span>

<span class="kd">const</span> <span class="nx">YOUR_AWESOME_DOMAIN</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">https://website.com</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">formatted</span> <span class="o">=</span> <span class="nx">sitemap</span> <span class="o">=&gt;</span> <span class="nx">prettier</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="nx">sitemap</span><span class="p">,</span> <span class="p">{</span> <span class="na">parser</span><span class="p">:</span> <span class="dl">"</span><span class="s2">html</span><span class="dl">"</span> <span class="p">});</span>

<span class="p">(</span><span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">pages</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">globby</span><span class="p">([</span>
    <span class="c1">// include</span>
    <span class="dl">"</span><span class="s2">../pages/**/*.tsx</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">../pages/*.tsx</span><span class="dl">"</span><span class="p">,</span>
    <span class="c1">// exclude</span>
    <span class="dl">"</span><span class="s2">!../pages/_*.tsx</span><span class="dl">"</span>
  <span class="p">]);</span>

  <span class="kd">const</span> <span class="nx">pagesSitemap</span> <span class="o">=</span> <span class="s2">`
    </span><span class="p">${</span><span class="nx">pages</span>
      <span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">page</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">page</span>
          <span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="dl">"</span><span class="s2">../pages/</span><span class="dl">"</span><span class="p">,</span> <span class="dl">""</span><span class="p">)</span>
          <span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="dl">"</span><span class="s2">.tsx</span><span class="dl">"</span><span class="p">,</span> <span class="dl">""</span><span class="p">)</span>
          <span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/</span><span class="se">\/</span><span class="sr">index/g</span><span class="p">,</span> <span class="dl">""</span><span class="p">);</span>
        <span class="kd">const</span> <span class="nx">routePath</span> <span class="o">=</span> <span class="nx">path</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">index</span><span class="dl">"</span> <span class="p">?</span> <span class="dl">""</span> <span class="p">:</span> <span class="nx">path</span><span class="p">;</span>
        <span class="k">return</span> <span class="s2">`
          &lt;url&gt;
            &lt;loc&gt;</span><span class="p">${</span><span class="nx">YOUR_AWESOME_DOMAIN</span><span class="p">}</span><span class="s2">/</span><span class="p">${</span><span class="nx">routePath</span><span class="p">}</span><span class="s2">&lt;/loc&gt;
            &lt;lastmod&gt;</span><span class="p">${</span><span class="nx">getDate</span><span class="p">}</span><span class="s2">&lt;/lastmod&gt;
          &lt;/url&gt;
        `</span><span class="p">;</span>
      <span class="p">})</span>
      <span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="dl">""</span><span class="p">)}</span><span class="s2">
  `</span><span class="p">;</span>

  <span class="kd">const</span> <span class="nx">generatedSitemap</span> <span class="o">=</span> <span class="s2">`
    &lt;?xml version="1.0" encoding="UTF-8"?&gt;
    &lt;urlset
      xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd"
    &gt;
      </span><span class="p">${</span><span class="nx">pagesSitemap</span><span class="p">}</span><span class="s2">
    &lt;/urlset&gt;
  `</span><span class="p">;</span>

  <span class="kd">const</span> <span class="nx">formattedSitemap</span> <span class="o">=</span> <span class="p">[</span><span class="nx">formatted</span><span class="p">(</span><span class="nx">generatedSitemap</span><span class="p">)];</span>

  <span class="nx">fs</span><span class="p">.</span><span class="nx">writeFileSync</span><span class="p">(</span><span class="dl">"</span><span class="s2">../public/sitemap-common.xml</span><span class="dl">"</span><span class="p">,</span> <span class="nx">formattedSitemap</span><span class="p">,</span> <span class="dl">"</span><span class="s2">utf8</span><span class="dl">"</span><span class="p">);</span>
<span class="p">})();</span>
</code></pre></div></div>

<p>위의 스크립트를 실행하면, 아래와 같은 xml 파일을 만들어줍니다(예시).</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;urlset</span>
  <span class="na">xmlns=</span><span class="s">"http://www.sitemaps.org/schemas/sitemap/0.9"</span>
  <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
  <span class="na">xsi:schemaLocation=</span><span class="s">"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd"</span>
<span class="nt">&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T08:19:25.691Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/about<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T08:19:25.691Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/blog<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T08:19:25.691Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/profile<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T08:19:25.691Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/teams<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T08:19:25.691Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
<span class="nt">&lt;/urlset&gt;</span>
</code></pre></div></div>

<hr />

<h3 id="2-외부-api를-위한-sitemap-generator-스크립트-작성">2. 외부 API를 위한 sitemap generator 스크립트 작성</h3>

<p>위의 예제 코드와 같이, 정적 페이지들에 대해서는 사이트맵을 만들어주기가 비교적 쉽습니다. 하지만, 동적 페이지들(e.g. userId 등을 받아서 페이지를 띄워주는)에 대해서는 조금 다른 방식을 통해 사이트맵을 생성하는 스크립트를 작성해야 했습니다(예제 코드에서는 <a href="https://jsonplaceholder.typicode.com/">JSONPlaceholder</a>의 API 를 사용했습니다).</p>

<p>sitemap-posts.js라는 이름으로 아래와 같은 코드를 작성했습니다.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">const</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">fs</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">fetch</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">node-fetch</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">prettier</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">prettier</span><span class="dl">"</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">getDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">().</span><span class="nx">toISOString</span><span class="p">();</span>

<span class="kd">const</span> <span class="nx">fetchUrl</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">https://jsonplaceholder.typicode.com/posts</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">YOUR_AWESOME_DOMAIN</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">https://website.com</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">formatted</span> <span class="o">=</span> <span class="nx">sitemap</span> <span class="o">=&gt;</span> <span class="nx">prettier</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="nx">sitemap</span><span class="p">,</span> <span class="p">{</span> <span class="na">parser</span><span class="p">:</span> <span class="dl">"</span><span class="s2">html</span><span class="dl">"</span> <span class="p">});</span>

<span class="p">(</span><span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">fetchPosts</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">fetch</span><span class="p">(</span><span class="nx">fetchUrl</span><span class="p">)</span>
    <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">())</span>
    <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">err</span><span class="p">));</span>

  <span class="kd">const</span> <span class="nx">postList</span> <span class="o">=</span> <span class="p">[];</span>
  <span class="nx">fetchPosts</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">post</span> <span class="o">=&gt;</span> <span class="nx">postList</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">post</span><span class="p">.</span><span class="nx">id</span><span class="p">));</span>

  <span class="kd">const</span> <span class="nx">postListSitemap</span> <span class="o">=</span> <span class="s2">`
    </span><span class="p">${</span><span class="nx">postList</span>
      <span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">id</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">return</span> <span class="s2">`
          &lt;url&gt;
            &lt;loc&gt;</span><span class="p">${</span><span class="s2">`</span><span class="p">${</span><span class="nx">YOUR_AWESOME_DOMAIN</span><span class="p">}</span><span class="s2">/post/</span><span class="p">${</span><span class="nx">id</span><span class="p">}</span><span class="s2">`</span><span class="p">}</span><span class="s2">&lt;/loc&gt;
            &lt;lastmod&gt;</span><span class="p">${</span><span class="nx">getDate</span><span class="p">}</span><span class="s2">&lt;/lastmod&gt;
          &lt;/url&gt;`</span><span class="p">;</span>
      <span class="p">})</span>
      <span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="dl">""</span><span class="p">)}</span><span class="s2">
  `</span><span class="p">;</span>

  <span class="kd">const</span> <span class="nx">generatedSitemap</span> <span class="o">=</span> <span class="s2">`
    &lt;?xml version="1.0" encoding="UTF-8"?&gt;
    &lt;urlset
      xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd"
    &gt;
      </span><span class="p">${</span><span class="nx">postListSitemap</span><span class="p">}</span><span class="s2">
    &lt;/urlset&gt;
  `</span><span class="p">;</span>

  <span class="kd">const</span> <span class="nx">formattedSitemap</span> <span class="o">=</span> <span class="p">[</span><span class="nx">formatted</span><span class="p">(</span><span class="nx">generatedSitemap</span><span class="p">)];</span>

  <span class="nx">fs</span><span class="p">.</span><span class="nx">writeFileSync</span><span class="p">(</span><span class="dl">"</span><span class="s2">../public/sitemap-posts.xml</span><span class="dl">"</span><span class="p">,</span> <span class="nx">formattedSitemap</span><span class="p">,</span> <span class="dl">"</span><span class="s2">utf8</span><span class="dl">"</span><span class="p">);</span>
<span class="p">})();</span></code></pre></figure>

<p>위의 스크립트를 실행하면, 아래와 같은 xml 파일을 만들어줍니다(예시).</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;urlset</span>
  <span class="na">xmlns=</span><span class="s">"http://www.sitemaps.org/schemas/sitemap/0.9"</span>
  <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
  <span class="na">xsi:schemaLocation=</span><span class="s">"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd"</span>
<span class="nt">&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/post/1<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T16:03:19.388Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/post/2<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T16:03:19.388Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/post/3<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T16:03:19.388Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/post/4<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T16:03:19.388Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/post/5<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T16:03:19.388Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/post/6<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T16:03:19.388Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/post/7<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T16:03:19.388Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/post/8<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T16:03:19.388Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/post/9<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T16:03:19.388Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
  <span class="nt">&lt;url&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/post/10<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T16:03:19.388Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/url&gt;</span>
<span class="nt">&lt;/urlset&gt;</span></code></pre></figure>

<hr />

<h3 id="3-위에서-만들어진-사이트맵-파일들을-모두-gzip-형식으로-압축해주는-스크립트-작성">3. 위에서 만들어진 사이트맵 파일들을 모두 gzip 형식으로 압축해주는 스크립트 작성</h3>

<p>gzip(.gz) 형식으로 압축된 사이트맵은 용량을 줄이면서도, xml 형식의 사이트맵과 동일하게 사용할 수 있습니다. 위에서 만들어진 xml 파일들을 zlib을 사용해서 모두 gzip 형식으로 압축하겠습니다.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">const</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">fs</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">zlib</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">zlib</span><span class="dl">"</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">dirs</span> <span class="o">=</span> <span class="p">[</span><span class="dl">"</span><span class="s2">../public/sitemap</span><span class="dl">"</span><span class="p">];</span>

<span class="nx">dirs</span><span class="p">.</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">dir</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">fs</span><span class="p">.</span><span class="nx">readdirSync</span><span class="p">(</span><span class="nx">dir</span><span class="p">).</span><span class="nx">forEach</span><span class="p">((</span><span class="nx">file</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">file</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="dl">"</span><span class="s2">.xml</span><span class="dl">"</span><span class="p">))</span> <span class="p">{</span>
      <span class="c1">// gzip</span>
      <span class="kd">const</span> <span class="nx">fileContents</span> <span class="o">=</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">createReadStream</span><span class="p">(</span><span class="nx">dir</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">/</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">file</span><span class="p">);</span>
      <span class="kd">const</span> <span class="nx">writeStream</span> <span class="o">=</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">createWriteStream</span><span class="p">(</span><span class="nx">dir</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">/</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">file</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">.gz</span><span class="dl">"</span><span class="p">);</span>
      <span class="kd">const</span> <span class="nx">zip</span> <span class="o">=</span> <span class="nx">zlib</span><span class="p">.</span><span class="nx">createGzip</span><span class="p">();</span>

      <span class="nx">fileContents</span>
        <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">zip</span><span class="p">)</span>
        <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">"</span><span class="s2">error</span><span class="dl">"</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">err</span><span class="p">))</span>
        <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">writeStream</span><span class="p">)</span>
        <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">"</span><span class="s2">error</span><span class="dl">"</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">err</span><span class="p">));</span>
    <span class="p">}</span>
  <span class="p">});</span>
<span class="p">});</span></code></pre></figure>

<p>위의 스크립트를 실행하면, 1번과 2번에서 만들어진 xml 파일들을 모두 .gz 형식으로 압축해줍니다.</p>

<hr />

<h3 id="4-위의-방법들로-만들어진-sitemap-파일들을-위한-사이트맵-색인-파일-생성-스크립트-작성">4. 위의 방법들로 만들어진 sitemap 파일들을 위한, 사이트맵 색인 파일 생성 스크립트 작성</h3>

<p>여러 개의 사이트맵들을 검색엔진에 제공(구글 서치콘솔, 네이버 서치 어드바이저 등)하기 위해서는, 사이트맵 색인(Sitemap index) 파일이 별도로 필요합니다.</p>

<p>볼라의 경우 <code class="language-plaintext highlighter-rouge">/seller/[_id]</code>, <code class="language-plaintext highlighter-rouge">/product/[_id]</code>, <code class="language-plaintext highlighter-rouge">/video/[_id]</code> 등 다양한 동적 웹페이지들에 대응해 각각 사이트맵을 따로 만들어주었으며, 구글 서치콘솔 등에 사이트맵을 제출하기 위해서는 단일 사이트맵으로 제출해야 하기 때문에 아래와 같은 코드를 작성해서 사이트맵 색인 파일을 만들었습니다.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">const</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">fs</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">globby</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">globby</span><span class="dl">"</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">prettier</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">"</span><span class="s2">prettier</span><span class="dl">"</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">getDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">().</span><span class="nx">toISOString</span><span class="p">();</span>

<span class="kd">const</span> <span class="nx">webrootDomain</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">https://website.com</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">formatted</span> <span class="o">=</span> <span class="nx">sitemap</span> <span class="o">=&gt;</span> <span class="nx">prettier</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="nx">sitemap</span><span class="p">,</span> <span class="p">{</span> <span class="na">parser</span><span class="p">:</span> <span class="dl">"</span><span class="s2">html</span><span class="dl">"</span> <span class="p">});</span>

<span class="p">(</span><span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">pages</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">globby</span><span class="p">([</span><span class="dl">"</span><span class="s2">../public/sitemap/*.gz</span><span class="dl">"</span><span class="p">]);</span>

  <span class="kd">const</span> <span class="nx">sitemapIndex</span> <span class="o">=</span> <span class="s2">`
    </span><span class="p">${</span><span class="nx">pages</span>
      <span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">page</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">page</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="dl">"</span><span class="s2">../public/</span><span class="dl">"</span><span class="p">,</span> <span class="dl">""</span><span class="p">);</span>
        <span class="k">return</span> <span class="s2">`
          &lt;sitemap&gt;
            &lt;loc&gt;</span><span class="p">${</span><span class="s2">`</span><span class="p">${</span><span class="nx">webrootDomain</span><span class="p">}</span><span class="s2">/</span><span class="p">${</span><span class="nx">path</span><span class="p">}</span><span class="s2">`</span><span class="p">}</span><span class="s2">&lt;/loc&gt;
            &lt;lastmod&gt;</span><span class="p">${</span><span class="nx">getDate</span><span class="p">}</span><span class="s2">&lt;/lastmod&gt;
          &lt;/sitemap&gt;`</span><span class="p">;</span>
      <span class="p">})</span>
      <span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="dl">""</span><span class="p">)}</span><span class="s2">
  `</span><span class="p">;</span>

  <span class="kd">const</span> <span class="nx">sitemap</span> <span class="o">=</span> <span class="s2">`
    &lt;?xml version="1.0" encoding="UTF-8"?&gt;
    &lt;sitemapindex xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"&gt;
      </span><span class="p">${</span><span class="nx">sitemapIndex</span><span class="p">}</span><span class="s2">
    &lt;/sitemapindex&gt;
  `</span><span class="p">;</span>

  <span class="kd">const</span> <span class="nx">formattedSitemap</span> <span class="o">=</span> <span class="p">[</span><span class="nx">formatted</span><span class="p">(</span><span class="nx">sitemap</span><span class="p">)];</span>

  <span class="nx">fs</span><span class="p">.</span><span class="nx">writeFileSync</span><span class="p">(</span><span class="dl">"</span><span class="s2">../public/sitemap.xml</span><span class="dl">"</span><span class="p">,</span> <span class="nx">formattedSitemap</span><span class="p">,</span> <span class="dl">"</span><span class="s2">utf8</span><span class="dl">"</span><span class="p">);</span>
<span class="p">})();</span></code></pre></figure>

<p>위의 스크립트를 실행하면, 아래와 같은 xml 파일을 만들어줍니다(예시).</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="nt">&lt;sitemapindex</span> <span class="na">xmlns=</span><span class="s">"http://www.sitemaps.org/schemas/sitemap/0.9"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;sitemap&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/sitemap/sitemap-common.xml.gz<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T08:19:46.858Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/sitemap&gt;</span>
  <span class="nt">&lt;sitemap&gt;</span>
    <span class="nt">&lt;loc&gt;</span>https://website.com/sitemap/sitemap-posts.xml.gz<span class="nt">&lt;/loc&gt;</span>
    <span class="nt">&lt;lastmod&gt;</span>2020-04-03T08:19:46.858Z<span class="nt">&lt;/lastmod&gt;</span>
  <span class="nt">&lt;/sitemap&gt;</span>
<span class="nt">&lt;/sitemapindex&gt;</span></code></pre></figure>

<hr />

<h3 id="5-마스터-배포-시마다-새로운-사이트맵을-생성하는-bash-스크립트와-github-actions에서-구글-search-console에-사이트맵을-ping-하는-스크립트-작성">5. 마스터 배포 시마다 새로운 사이트맵을 생성하는 Bash 스크립트와, GitHub Actions에서 구글 Search Console에 사이트맵을 Ping 하는 스크립트 작성</h3>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c"># yarn sitemap</span>
<span class="nv">$ </span><span class="nb">cd </span>public
<span class="nv">$ </span><span class="nb">rm</span> <span class="nt">-rf</span> sitemap
<span class="nv">$ </span><span class="nb">mkdir </span>sitemap
<span class="nv">$ </span><span class="nb">cd</span> ..
<span class="nv">$ </span><span class="nb">cd </span>scripts
<span class="nv">$ </span>node ./sitemap-common.js
<span class="nv">$ </span>node ./sitemap-posts.js
<span class="nv">$ </span>node ./sitemap.js</code></pre></figure>

<p>구글 서치콘솔에 페이지의 색인을 다시 생성하도록 요청하려면, 아래의 스크립트를 마지막에 추가하면 됩니다.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>curl http://google.com/ping?sitemap<span class="o">=</span>http://website.com/sitemap.xml</code></pre></figure>

<p>볼라의 경우에는 xml 형식의 사이트맵을 만든 후 해당 사이트맵들을 gzip 형식으로 압축한 다음, 기존의 xml 사이트맵을 제거할 수 있도록 아래와 같은 bash 스크립트를 따로 작성해주었습니다.</p>

<p><img src="https://blog.kakaocdn.net/dn/bvtUCO/btrdJj7Rnum/lpe5O3PF7Rf38nl7ZlREr0/img.png" alt="Bash script" /></p>

<p>이후, 마스터 배포 시 GitHub Actions에서 위의 스크립트들을 실행하도록 workflow 파일을 수정했습니다.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c"># 사이트맵을 만들고, 구글에 제출합니다.</span>
- run: yarn sitemap
  name: ping sitemap</code></pre></figure>

<hr />

<h3 id="추후-반영개선해야-할-사항">추후 반영/개선해야 할 사항</h3>

<ul>
  <li>매 00시 정각마다 자동으로 신규 콘텐츠들이 반영된 새로운 사이트맵을 만들고, 이후 구글에 새로운 사이트맵 색인 Ping</li>
</ul>

<hr />

<h3 id="마치며">마치며</h3>

<p>개발에 대한 지식이 많이 부족한 터라 잘못된 내용이 있을 수도 있는데, 해당 부분에 코멘트를 달아주신다면 바로잡을 수 있도록 하겠습니다. 혹시 위 방법보다 더욱 좋은 방법이나, 개선을 위한 의견 등은 댓글로 부탁드립니다. 읽어주셔서 감사합니다!</p>

:ET